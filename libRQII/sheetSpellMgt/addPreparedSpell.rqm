[h: arguments = macro.args]

[h: tokenId = json.get(arguments, "tokenId")]
[h: spellName = json.get(arguments, "spellName")]
[h: spellMagnitude = json.get(arguments, "spellMagnitude")]

<!-- define nextKeyId -->
[h: spellsToken = getProperty("draconicPrepared", tokenId)]

[h: len = json.length(spellsToken)]
[h: nextId = len + 1]
[h: preSpellKey = strformat('preSpell%{nextId}')]

[h: newSpellValues = json.set("{}","displayname",spellName)]
[h: newSpellValues = json.set(newSpellValues,"magnitude",spellMagnitude)]

[h: spellsToken = json.set(spellsToken,preSpellKey,newSpellValues)]

[h: setProperty("draconicPrepared",spellsToken, tokenId)]

<!-- Refresh edit Window for the new token -->
[h: macroParam = json.set("{}", "tokenId", tokenId)]
[r, macro("openSheetSpellMgt@Lib:RQII"): macroParam]