[h: "<!-- resetTokenInPursuit - Function that reset all token in a pursuit -->"]
[h: "<!-- Params : -->"]
[h: "<!--   tokens : a pursuit jsonStructure to be updated  -->"]
[h: "<!-- return a tokens jsonStructure to be updated in a pursuitToken's pursuit property -->"]

[h: tokens = arg(0)]
[h, if(json.isEmpty(tokens)) : tokens = '[]']

[h: fctResult = json.set("{}", "tokens", tokens, "logMsg", "","logDebugMsg", "")]
[h: logMsg = ""]
[h: logDebugMsg = ""]

[h, foreach(item, tokens, ""), code: {
  [h: tokenId = json.get(item, "tokenId")]
  [h: currStartX = json.get(item, "startX")]
  [h: tokenName = getName(tokenId)] 
 
  [h: inputStr = strformat("tip|Select %{tokenName} position in the pursuit||LABEL|SPAN=TRUE")]
  [h: inputStr = json.append(inputStr, strformat("startX|%{currStartX}|Starting position in meter (startX)|Text"))]
  [h: abort(input(json.toList(inputStr,"##")))]
  
  [h: tokens = json.path.set(tokens, "[?(@.tokenId == '"+tokenId+"')].startX",startX)]
  [h: tokens = json.path.set(tokens, "[?(@.tokenId == '"+tokenId+"')].prevX",startX)]
  [h: tokens = json.path.set(tokens, "[?(@.tokenId == '"+tokenId+"')].prevXlogId","none")]
  [h: tokens = json.path.set(tokens, "[?(@.tokenId == '"+tokenId+"')].currX","")]
  [h: tokens = json.path.set(tokens, "[?(@.tokenId == '"+tokenId+"')].currXlogId","none")]
  
  [h: logDebugMsg = logDebugMsg+tokenName+" reset startX to : "+startX+"<br>"]

}]

[h: fctResult = json.set(fctResult,"tokens",tokens)]
[h: logMsg = logMsg+"Reset pursuit is done.<br>"]
[h: fctResult = json.set(fctResult,"logMsg",logMsg,"logDebugMsg",logDebugMsg)]
[r: fctResult]
