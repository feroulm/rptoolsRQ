[h: arguments = macro.args] 
[h: tokenId = json.get(arguments, "tokenId")]
[h: newBase = json.get(arguments,"base")]
[h: newCurrent = json.get(arguments,"current")]
[h: newDesc= json.get(arguments,"desc")]


[h: propArmorPenalty = getProperty("ArmorPenalty", tokenId)]

[h: propArmorPenalty = json.set(propArmorPenalty,"base",newBase)]
[h: propArmorPenalty = json.set(propArmorPenalty,"current",newCurrent)]
[h: propArmorPenalty = json.set(propArmorPenalty,"desc",newDesc)]


[h: setProperty("ArmorPenalty", propArmorPenalty, tokenId)]

[h: "<!-- Recompute SR based on armorPenalty change -->"]
[h: computeSR(tokenId)]

[h: "<!-- Refresh edit Window for the new token -->"]
[h: macroParam = json.set("{}", "tokenId", tokenId)]
[h, macro("openEquipmentMgt@Lib:RQII"): macroParam]