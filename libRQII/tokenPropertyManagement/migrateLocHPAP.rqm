[h: arguments = macro.args]
[h, if(json.isEmpty(arguments)): tokenId = currentToken(); tokenId = json.get(arguments,"tokenId")]

<!-- init loc Human value -->

[h: locName = "loc1=TÃªte;loc2=Br. G.;loc3=Br. D.;loc4=Poit-;loc5=Abd.;loc6=Jb. G.;loc7=Jb D."]
[h: locD20 = "loc1=19-20;loc2=16-18;loc3=13-15;loc4=10-12;loc5=7-9;loc6=4-6;loc7=1-3"]
[h: locNb = 7]

[h: setProperty("locName", locName, tokenId)]
[h: setProperty("locD20", locD20, tokenId)]
[h: setProperty("locNb", locNb, tokenId)]

<!-- recopy existing value , we don't care for current value, we reset it base (it not a macro du be used during a ca combat -->

[h: hpInit = getProperty("hpInit", tokenId)]
[h: locOrigHP_Head = hpInit]
[h: locOrigHP_Arm_L = hpInit-1]
[h: locOrigHP_Arm_R = hpInit-1]
[h: locOrigHP_Che = hpInit+2]
[h: locOrigHP_Abd = hpInit+1]
[h: locOrigHP_Leg_L = hpInit]
[h: locOrigHP_Leg_R = hpInit]

[h: newLocHP = getProperty("locHP", tokenId)]

[h: newLocHP = setStrProp(newLocHP,strformat("loc1"),locOrigHP_Head)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc2"),locOrigHP_Arm_L)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc3"),locOrigHP_Arm_R)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc4"),locOrigHP_Che)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc5"),locOrigHP_Abd)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc6"),locOrigHP_Leg_L)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc7"),locOrigHP_Leg_R)]

[h: setProperty("locHP", newLocHP, tokenId)]

[h: newLocHP = getProperty("locHPorig", tokenId)]

[h: newLocHP = setStrProp(newLocHP,strformat("loc1"),locOrigHP_Head)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc2"),locOrigHP_Arm_L)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc3"),locOrigHP_Arm_R)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc4"),locOrigHP_Che)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc5"),locOrigHP_Abd)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc6"),locOrigHP_Leg_L)]
[h: newLocHP = setStrProp(newLocHP,strformat("loc7"),locOrigHP_Leg_R)]

[h: setProperty("locHPorig", newLocHP, tokenId)]

<!-- recopy AP -->
[h: AP = getProperty("AP", tokenId)]
[h: ap1 = getStrProp(AP, "apH")]
[h: ap2 = getStrProp(AP, "apLA")]
[h: ap3 = getStrProp(AP, "apRA")]
[h: ap4 = getStrProp(AP, "apC")]
[h: ap5 = getStrProp(AP, "apA")]
[h: ap6 = getStrProp(AP, "apLL")]
[h: ap7 = getStrProp(AP, "apRL")]

[h: newLocAP = getProperty("locAP", tokenId)]

[h: newLocAP = setStrProp(newLocAP,strformat("loc1"),ap1)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc2"),ap2)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc3"),ap3)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc4"),ap3)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc5"),ap4)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc6"),ap5)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc7"),ap7)]

[h: setProperty("locAP", newLocAP, tokenId)]

[h: newLocAP = getProperty("locAPorig", tokenId)]

[h: newLocAP = setStrProp(newLocAP,strformat("loc1"),ap1)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc2"),ap2)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc3"),ap3)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc4"),ap3)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc5"),ap4)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc6"),ap5)]
[h: newLocAP = setStrProp(newLocAP,strformat("loc7"),ap7)]

[h: setProperty("locAPorig", newLocAP, tokenId)]