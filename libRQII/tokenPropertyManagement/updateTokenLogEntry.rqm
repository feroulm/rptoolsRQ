[h: "<!-- updateTokenLogEntry -->"]
[h: arguments = macro.args]

[r, if(json.isEmpty(arguments)), code: {
  [assert(0,"<i>combat::updateTokenLogEntry</i> : no arguments, this macro can't be called without mandatory parameters",0)]
 };{
  [h: logIdx = json.get(arguments, "logIdx")]
  [h: tLogTokenId = json.get(arguments, "tLogTokenId")]
  [h: tokenId = json.get(arguments, "tokenId")]
}]

[h: logs = getProperty("tokenLog", tLogTokenId,"_Main_AE")]
[h: logNewEntry = json.get(logs,logIdx)]
[h: logNewEntry = json.set(logNewEntry,"sessionName",json.get(arguments, "logSessionName"))]
[h: logNewEntry = json.set(logNewEntry,"logMsg",json.get(arguments, "logMsg"))]
[h: logNewEntry = json.set(logNewEntry,"logComment",json.get(arguments, "logComment"))]

[h: logs = json.set(logs,logIdx,logNewEntry)]
[h: setProperty("tokenLog",logs,tLogTokenId,"_Main_AE")]	

[h: macroParam = json.set("{}", "tokenId", tokenId,"tab", "logs","tLogTokenId", tLogTokenId)]
[h: lnkTxt = macroLinktext("openSheet@Lib:RQII", "all",macroParam)]
[h: execLink(lnkTxt,0,"all")]