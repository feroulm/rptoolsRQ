[h: arguments = macro.args] 
[h: tokenId = json.get(arguments, "tokenId")]
[h: loc = json.get(arguments, "CharLoc")]
[h: hpInit = getProperty("hpInit",tokenId)]
[h: hpAction = json.get(arguments, "hpAction")]
[h: currentCombatStatus = getProperty("combatStatus",tokenId)]
[h: woundLevel = "normal"]
[h: turnStatus = json.get(currentCombatStatus,"turnStatus")]
[h: amount = json.get(arguments, "Amount")]

[r, if(hpAction == "Heal"), code: {
[h: newLoc = getProperty(loc,tokenId) + json.get(arguments, "Amount")]
[h: logMsg = "Healed HP: +"+amount+" in "+loc]
};{
[h: newLoc = getProperty(loc,tokenId) - json.get(arguments, "Amount")]
[h: logMsg = "Wounded HP: -"+amount+" in "+loc]
}]

Amount : [r: json.get(arguments, "Amount")]<br>

[r: loc] <i>Before</i> : [r: getProperty(loc,tokenId)]<br>
[r: loc] <i>After [r: hpAction]</i> : [r: newLoc]<br>

[h: setProperty(loc, newLoc, tokenId)]

[h, switch(loc):
    case "HP_Arm_L": locOrig = hpInit-1;
    case "HP_Arm_R": locOrig = hpInit-1;
    case "HP_Che": locOrig = hpInit+2;
    case "HP_Abd": locOrig = hpInit+1;
   default: locOrig = hpInit
]

[r, if((newLoc <= 0)&&(locOrig + newLoc)>0), code: { 
  <b>Serious Wound</b><br>
  [h: woundLevel = "serious"]
  [r, if(hpAction == "Damage"), code: {
    Lost proactive CA (1d3) = [r: lostProCA = 1d3]<br>
    [h: logMsg = logMsg+" -> Serious Wound: loose "+lostProCA+" proCA"]
    [h: currentLostProCA = json.get(currentCombatStatus,"lostProCA")]
    [h: currentCombatStatus = json.set(currentCombatStatus,"lostProCA",currentLostProCA+lostProCA)]
    [h: setProperty("combatStatus",currentCombatStatus,tokenId)]	
  };{}]
};{}]
[r, if((locOrig + newLoc) <= 0), code: { 
  <b>Major Wound</b><br>
  [h: woundLevel = "major"]
  [r, if(hpAction == "Damage"), code: {
    Lost proactive CA (1d3) = [r: lostProCA = 1d3]<br>
    [h: logMsg = logMsg+" -> Major Wound: loose "+lostProCA+" proCA"]
    [h: currentLostProCA = json.get(currentCombatStatus,"lostProCA")]
    [h: currentCombatStatus = json.set(currentCombatStatus,"lostProCA",currentLostProCA+lostProCA)]
    [h: setProperty("combatStatus",currentCombatStatus,tokenId)]	
    <!-- disable, loose all remaining CA till healed and nxtmr -->
    [h: macroParam = json.set("{}", "tokenId", tokenId, "action", "disable")]
    [r, macro("updateCombat@Lib:RQII"): macroParam]
  };{}]
};{}]
[r, if((turnStatus == "disabled")&&(woundLevel != "major")), code:{
  <!-- disabled token that is healed can came back into play for next mr -->
  [h: logMsg = logMsg+" -> no more disabled, can act next mr"]
  [h: macroParam = json.set("{}", "tokenId", tokenId, "action", "enable")]
  [r, macro("updateCombat@Lib:RQII"): macroParam]
  No more disabled ! Can act next mr.<br>
};{}]

 <!-- log the change -->
[h: logCombatAction(tokenId,"change",logMsg)]

Changes saved to [r: getName(tokenId)]
<!-- Refresh -->
[h: macroParam2 = json.set("{}", "tokenId", tokenId)]
[r, macro("openLocationHp@Lib:RQII"): macroParam2]