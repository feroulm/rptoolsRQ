[h: arguments = macro.args]
[r, if(json.isEmpty(arguments)), code: {
  [assert(0,"<i>sheetView::openSheetReadOnlyNPC</i> : no arguments, this macro can't be called without mandatory parameters",0)]
 };{
  [h: tokenId = json.get(arguments,"tokenId")]
  [h: tab = json.get(arguments,"tab")]
  [h, if(tab == "") : tab = "main"]
  [h: msg = json.get(arguments,"msg")]
}]

[h, if(listCount(tokenId) != 1): abort(0)]
[h: tokenType = getPropertyType(tokenId)]
[h, if((tokenType != "RQ_Human")&&(tokenType != "RQ_Monster")): abort(0)]

[h: logTypeFilter = json.get(arguments, "logTypeFilter")]
[h, if(json.isEmpty(logTypeFilter)), code:{
	[h: logTypeFilter = ".*"]
};{
  [h, if(logTypeFilter == "") : logTypeFilter = ".*"]
}]

[h: logSessionNameFilter = json.get(arguments, "logSessionNameFilter")]
[h, if(json.isEmpty(logSessionNameFilter)), code:{
	[h: logSessionNameFilter = ".*"]
};{
  [h, if(logSessionNameFilter == "") : logSessionNameFilter = ".*"]
}]

[h: dialogName = "SheetNPC"+tokenId]

[dialog5(dialogName,"width=888; height=830; temporary=1"): {
  <html>
    <head>
      <link rel="stylesheet" type="text/css" href="pureCss@Lib:RQII">
      <link rel="stylesheet" type="text/css" href="rqCss@Lib:RQII">
      <title>[r: getName(tokenId)]</title>
    </head>
    <body class="body-custom">   
	  [h: macroParam = json.set("{}", "tokenId", tokenId, "msg", msg, "srcWindow", "openSheet")]
    [r, macro("editCombatActionReadOnly@Lib:RQII"): macroParam]
    </body>
</html>
}]