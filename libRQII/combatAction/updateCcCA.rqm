[h:"<!-- Update CA values in combatStatus properties when the following event are triggered -->"]
[h:"<!-- - lose / grap a weapon -->"]
[h:"<!-- - increase nb of CA because of magic -->"]

[h:"<!-- Called by :  editHumCombatAttr@Lib:RQII -->"]
[h:"<!-- Calling :  -->"]
[h:"<!-- - UDF computeCcCA a.k.a computeCcCA@Lib:RQII (combatAction Group) -->"]
[h:"<!-- - openHumCombatAttr@Lib:RQII   (sheetManagement Group) -->"]

[h: tokenId = json.get(macro.args, "tokenId")]
[h: action = json.get(macro.args, "action")]
[h: newWeaponNb = json.get(macro.args, "newWeaponNb")]
[h: weaponName = json.get(macro.args, "weaponName")]
[h: newMagicCA = json.get(macro.args, "newMagicCA")]
[h: srcWindow = json.get(macro.args, "srcWindow")]

[h: currentCombatStatus = getProperty("combatStatus",tokenId)]
[h: currActiveCA = json.get(currentCombatStatus,"activeCA")]
[h: currCcCA = json.get(currentCombatStatus,"ccCA")]
[h: currWeaponCA = json.get(currentCombatStatus,"weaponCA")]
[h: currMagicCA = json.get(currentCombatStatus,"magicCA")]
[h: currWeaponNb = json.get(currentCombatStatus,"currWeaponNb")]

[h: logLongMsg =""]

[h, switch(action), code:
   case "weaponca" : {

    [h: "<!-- compute weaponCA bonus -->"]
    [h: newWeaponCA = newWeaponNb - 1]

    [h, if (newWeaponCA < 0): newWeaponCA = 0]
    [h: currentCombatStatus = json.set(currentCombatStatus,"currWeaponNb",newWeaponNb)]
    [h: currentCombatStatus = json.set(currentCombatStatus,"weaponCA",newWeaponCA)]
    
    [h: "<!-- recompute ccCA, may impact current CA status -->"]
    [h: currentCombatStatus = computeCcCA(tokenId,currentCombatStatus)] 
    [h: setProperty("combatStatus",currentCombatStatus,tokenId)]

    [h: newWeaponCA = json.get(currentCombatStatus,"weaponCA")]
    [h: newCcCA = json.get(currentCombatStatus,"ccCA")]
    [h: newActiveCA = json.get(currentCombatStatus,"activeCA")]
    
    [h, if(newWeaponNb>currWeaponNb), code: {
      [h: logMsg = "Grab a new weapon : <i>"+weaponName+"</i>."]
    };{
      [h: logMsg = "Loose weapon : <i>"+weaponName+"</i>."]
    }]
    
    [h, if(currWeaponCA == newWeaponCA), code: {  
      [h: logLongMsg = strformat("%{logMsg}<br>WeaponBonus is unchanged, ccCA and activeCA are unchanged")]
    };{
      [h: logLongMsg = strformat("%{logMsg}<br><i>weaponCA</i> switch from %{currWeaponCA} to <b>%{newWeaponCA}</b>.")]
      [h: logLongMsg = strformat("%{logLongMsg}<br><i>ccCA</i> switch from %{currCcCA} to <b>%{newCcCA}</b>.")]
      [h: logLongMsg = strformat("%{logLongMsg} <i>activeCA</i> switch from %{currActiveCA} to <b>%{newActiveCA}</b>")]
    }]
  };
  case "magicca" : {
    [h, if (newMagicCA < 0): newMagicCA = 0]
    [h: currentCombatStatus = json.set(currentCombatStatus,"magicCA",newMagicCA)]
    
    [h: "<!-- recompute ccCA, may impact current CA status -->"]
    [h: currentCombatStatus = computeCcCA(tokenId,currentCombatStatus)] 
    [h: setProperty("combatStatus",currentCombatStatus,tokenId)]

    [h: newCcCA = json.get(currentCombatStatus,"ccCA")]
    [h: newActiveCA = json.get(currentCombatStatus,"activeCA")]
    
    [h: logMsg = "Change magicCA."] 
    
    [h, if(currMagicCA == newMagicCA), code: {  
      [h: logLongMsg = strformat("%{logMsg}<br>magicCA bonus is unchanged, ccCA and activeCA are unchanged")]
    };{
      [h: logLongMsg = strformat("%{logMsg} <i>magicCA</i> switch from %{currMagicCA} to <b>%{newMagicCA}</b>")]
      [h: logLongMsg = strformat("%{logLongMsg}<br><i>ccCA</i> switch from %{currCcCA} to <b>%{newCcCA}</b>.")]
      [h: logLongMsg = strformat("%{logLongMsg} <i>activeCA</i> switch from %{currActiveCA} to <b>%{newActiveCA}</b>")]
    }]     
  };
]

[h: logCombatAction(tokenId,"change",logMsg)]
[r: addCombatLogEntry(tokenId,"updateCcCA",logLongMsg,"")]

[h: macroParam = json.set("{}", "tokenId", tokenId)]

[h, switch(srcWindow), code:
   case "openSheet" : {
    [h, macro("openSheet@Lib:RQII"): macroParam]
   };
   case "openSheetMgt" : {
    [h, macro("openSheetMgt@Lib:RQII"): macroParam]
   };
   default:{
    [h, macro("openHumCombatAttr@Lib:RQII"): macroParam]
   }
 ]