[h: tokenId = json.get(macro.args, "tokenId")]

[h: combatStatus = getProperty("combatStatus",tokenId)]
[h: propList = ""]
[h: inputStr = "tip|Modify combat status||LABEL|SPAN=TRUE"]
[h, foreach(combatProp, combatStatus), CODE:{
   [h: "<!-- make sure your combat properties has a valid variable format -->"]
   [h: prop = "input." + replace(lower(combatProp),"[^a-zA-Z0-9_.]","")]

   [h: propList = json.set(propList,prop,combatProp)]
   [h: value = json.get(combatStatus,combatProp)]
   [h: inputStr = json.append(inputStr, strformat("%{prop}|%{value}|%{combatProp}|Text"))]
}]

[h: abort(input(json.toList(inputStr,"##")))]

[h: updatedCombatStatus = "{}"]
[h, foreach(prop,propList), code: {
   [h: combatProp = json.get(propList,prop)]
   [h: value = eval(prop)]

   [h, if(json.isEmpty(value)): value = 0]

   [h: updatedCombatStatus = json.set(updatedCombatStatus,combatProp,value)]
}]

[h: combatStatus = updatedCombatStatus] 
[h: setProperty("combatStatus",combatStatus,tokenId)]

[h: logMsg = strformat("CombatStatus property object has been updated directly.")]
[h: addCombatLogEntry(tokenId,"globalEvent",logMsg,"")]
 
[h: macroParam = json.set("{}", "tokenId", tokenId,"msg",logMsg)]
[h: lnkTxt = macroLinktext("openCombatAction@Lib:RQII", "all",macroParam)]
[h: execLink(lnkTxt,0,"all")]