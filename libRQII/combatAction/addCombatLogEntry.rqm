[h: "<!-- addCombatLogEntry - Function to add a log entry to the current combatLog token on current map -->"]
[h: "<!-- Called by several combatAction/update* method  -->"]
[h: "<!-- if no combatLogToken is found, log to the chat window, otherwise return nothing -->"]

[h: tokenId = arg(0)]
[h: logType = arg(1)]
[h: logMsg = arg(2)]
[h: logComment = arg(3)]

[h:"<!-- get current combat token -->"]
[h: cLogTokenId = findCurrentCombatToken()]

[r, if(cLogTokenId == "none"), code :{
  <b>[r: getName(tokenId)]</b> : [r: logMsg]
  [r: logComment]
};{
  [h: combatProp = getProperty("combat",cLogTokenId)]
  [h: currMr = json.get(combatProp,"mr"))]
  [h: currCycle = json.get(combatProp,"cycle"))]

  [h: timestamp = json.get(getInfo("server"),"timeDate")]
  [h: logs = getProperty("combatLog", cLogTokenId)]
  
  [h: len = json.length(logs)]
  [h: nextId = len + 1]
    
  [h: newLogValues = json.set("{}","logId",nextId,"tokenId",tokenId)]
  [h: newLogValues = json.set(newLogValues,"logType",logType)]
  [h: newLogValues = json.set(newLogValues,"currMr",currMr)]
  [h: newLogValues = json.set(newLogValues,"currCycle",currCycle)]
  [h: newLogValues = json.set(newLogValues,"logMsg",logMsg)]
  [h: newLogValues = json.set(newLogValues,"logComment",logComment)]
  [h: newLogValues = json.set(newLogValues,"serverTime",timestamp)]
  
  [h: logs = json.append(logs,newLogValues)]
    
  [h: setProperty("combatLog", logs, cLogTokenId)]
}]