[h: "<!-- Open a window with only Reactive Action -->"]
[h: "<!-- - require a tokenId as a param -->"]
[h: "<!-- Should not be called directly, but from editCombatAction only  -->"]

[h: arguments = macro.args]

[r, if(json.isEmpty(arguments)), code: {
  [assert(0,"<i>sheetView::openForgotReactiveAction</i> : no arguments, this macro can't be called without mandatory parameters",0)]
 };{
  [h: tokenId = json.get(arguments,"tokenId")]
}]

[h: tokenMap = getCurrentMapName()]
[h: propMagicPoint = getProperty("MagicPoint",tokenId,tokenMap)]
[h: tCombatStatus = getProperty("combatStatus",tokenId)]
[h: chargeStatus = json.get(tCombatStatus,"chargeStatus")]
[h: macroParam = json.set("{}", "tokenId", tokenId)]
[h: lnkTxt = macroLinktext("openSheet@Lib:RQII", "all",macroParam)]
[h: activeCA = json.get(tCombatStatus,"activeCA")]

[r, if (activeCA<=0), code:{
  [h: msgAssert = strformat("No more CA for this MR. You cannot have done a Reactive Action !")]
  [h: res = input("junk|"+msgAssert+"|ignored|LABEL|SPAN=true")]
  [h: abort(0)]
};{}]

[dialog5("Forgot Reactive Combat Action","width=560; height=290; temporary=1"): {
  <html>
  <head>
    <link rel="stylesheet" type="text/css" href="pureCss@Lib:RQII">
    <link rel="stylesheet" type="text/css" href="pureGridsResponsiveCss@Lib:RQII">
    <link rel="stylesheet" type="text/css" href="rqCss@Lib:RQII">
    <title>Forgot Reactive Combat Action - [r: getName(tokenId)]</title>
  </head>
  <body class="body-custom">
  
  [r, if(isNPC(tokenId) && !isGM()), code: {
    Sorry you cannot play for this token.
  };{
  
  <div class="container pure-g">
    <div class="pure-u-1">
      <table class="content pure-table table-striped-custom">
        <tbody>
          <tr>
            <td><img src="[r: getTokenPortrait(70,tokenId,tokenMap)]"></img></td>
            <td><a class="link-token pure-menu-link" href="[r: lnkTxt]">[r: getName(tokenId)]</a>
            <td>
              Not acting in its turn
              <br><br>CA : <span style="font-weight: bold;color:blue">[r: json.get(tCombatStatus,"activeCA")]</span> / [r: json.get(tCombatStatus,"ccCA")]
              <br>MP : <span style="font-weight: bold;color:blue">[r: json.path.read(propMagicPoint,"MP.current")]</span> / [r: json.path.read(propMagicPoint,"MP.base")]
            </td>
            <td>[r: showActionSkillsOnly(tokenId)]</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <div class="container pure-g">
    <div class="pure-u-1">
      [r, if(chargeStatus=="prepareCharge"): "<b>!!Token is charging</b>. Doing an Evade will break the charge.<br>"] 
      <b>Reactive Actions</b>
      <hr>
      [r: showReactiveAction(tokenId)]
    </div>
  </div>
  }]
  </body>
  </html>
}]