[h: "<!-- Function to display a reduce set of skills during combat -->"]
[h: tokenId = arg(0)]
[h: tokenMap = getCurrentMapName()]

[h: malusInfo = ""]

[h: fatMalus = getFatigueMalus(tokenId)]
[h, if(fatMalus!=""): malusInfo = fatMalus+" ";""]

[h: smodMalus = getSituationModMalus(tokenId)]
[h, if(smodMalus!=""): malusInfo = malusInfo+smodMalus+" ";""]

[r, if(malusInfo != ""), code:{
  <span style="font-weight: bold;color:red">Malus :</span> [r: malusInfo]<br><br>
};{}]

[h: aSkills = getProperty("combatSkills", tokenId)]
[foreach(skill, aSkills, ","), code: {
  [h: skillName = replace(lower(skill),"[^a-zA-Z0-9_.]","")]
  [h: skillValues = json.get(aSkills,skill)]
  [r: skill] : [r: json.get(skillValues,"current")]%
}]
[h: aSkills = getProperty("commonSkills", tokenId)]

[h: unarmedValue = json.get(aSkills,"Unarmed")]
[h, if(json.isEmpty(unarmedValue)), code:{
  [h: unarmedValue = json.set("{}", "current", 0)]
};{}]

[h: evadeValue = json.get(aSkills,"Evade")]
[h, if(json.isEmpty(evadeValue)), code:{
  [h: evadeValue = json.set("{}", "current", 0)]
};{}]

[h: skAthletics = json.path.read(aSkills,"Athletics.current")]

[h: resilienceValue = json.get(aSkills,"Resilience")]
[h, if(json.isEmpty(resilienceValue)), code:{
  [h: resilienceValue = json.set("{}", "current", 0)]
};{}]

[h: persistenceValue = json.get(aSkills,"Persistence")]
[h, if(json.isEmpty(persistenceValue)), code:{
  [h: persistenceValue = json.set("{}", "current", 0)]
};{}]

<br> Unarmed [r: json.get(unarmedValue,"current")]%, Evade [r: json.get(evadeValue,"current")]%
<br><br> Athletics [r: skAthletics]%, Resilience [r: json.get(resilienceValue,"current")]%, Persistence [r: json.get(persistenceValue,"current")]%