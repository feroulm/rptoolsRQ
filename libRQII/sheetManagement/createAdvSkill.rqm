[h: param = macro.args]

[h: skType = json.get(param, "skType")]

[r, switch(skType), code:
  case "common" :{
  	[h: advSkDb = getLibProperty("CommonSkills", "Lib:RQII")]
  };
  case "advanced" :{
  	[h: advSkDb = getLibProperty("AdvSkills", "Lib:RQII")]
  };
  case "combat" :{
  	[h: advSkDb = getLibProperty("CombatSkills", "Lib:RQII")]
  };
  case "magic" :{
  	[h: advSkDb = getLibProperty("MagicSkills", "Lib:RQII")]
  };
  default: {
 	<!-- do nothing -->
 	<br>Unknown skill type !<br>
 	[h: advSkDb = getLibProperty("AdvSkills", "Lib:RQII")]
  }
]

[h: tokenId = json.get(param,"tokenId")]
[h: newSkillName = json.get(param,"advSkillName")]
[h: newSkillCode = json.get(param,"advSkillCode")]
[h: newSkillSubtype = json.get(param,"advSkillSubtype")]
[h: newSkillLnk = json.get(param,"advSkillLnk")]

[h: skillExist = json.contains(advSkDb,newSkillName)]

[r, if(! skillExist), code:{
  [h: newAdvSkillValues = json.set("{}","code",newSkillCode)]
  [h: newAdvSkillValues = json.set(newAdvSkillValues,"subtype",newSkillSubtype)]
  [h: newAdvSkillValues = json.set(newAdvSkillValues,"lnk",newSkillLnk)]
  [h: advSkDb = json.set(advSkDb,newSkillName,newAdvSkillValues)]	
  [r, switch(skType), code:
    case "common" :{
  	   [h: setLibProperty("CommonSkills", advSkDb, "Lib:RQII")]
    };
    case "advanced" :{
  	   [h: setLibProperty("AdvSkills", advSkDb, "Lib:RQII")]
    };
    case "combat" :{
      [h: setLibProperty("CombatSkills", advSkDb, "Lib:RQII")]
    };
    case "magic" :{
      [h: setLibProperty("MagicSkills", advSkDb, "Lib:RQII")]
    };
    default: {
 	<!-- do nothing -->
 	  <br>Unknown skill type !<br>
    }
  ]	

  Add advanced Skill : [r: newSkillName] 
};
{
	Not created, Skill exists already !
}]

<!-- Refresh edit Window for the new token -->
[h: macroParam = json.set("{}", "tokenId", tokenId,"skType",skType)]
[r, macro("openAddAdvSkill@Lib:RQII"): macroParam]