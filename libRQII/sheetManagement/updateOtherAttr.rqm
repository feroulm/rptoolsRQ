[h: arguments = macro.args] 
[h: srcWindow = json.get(arguments, "srcWindow")]
[h: tokenId = json.get(arguments, "tokenId")]
[h: currHeroPts = json.get(arguments, "currHeroPts")]
[h: currEnc = json.get(arguments, "currEnc")]
[h: travelEnc = json.get(arguments, "travelEnc")]
[h: healRate = json.get(arguments, "healRate")]
[h: movement = json.get(arguments, "movement")]
[h: improvementMod = json.get(arguments, "improvementMod")]
[h: newSRbonus = json.get(arguments, "SRbonus")]
[h: newSRmalus = json.get(arguments, "SRmalus")]

[h: propOtherAttr = getProperty("otherAttr",tokenId)]

[h: prevHeroPts = json.get(propOtherAttr, "currHeroPts")]

[h: propOtherAttr = json.set(propOtherAttr,"currHeroPts",currHeroPts,"prevHeroPts",prevHeroPts,"currEnc",currEnc,"travelEnc",travelEnc,"healRate",healRate,"movement",movement,"improvementMod",improvementMod)]

[h: setProperty("otherAttr",propOtherAttr,tokenId)]

[h: "<!-- Update and recompute SR -->"]
[h: propStrikeRank = getProperty("StrikeRank",tokenId)]
[h: propStrikeRank = json.set(propStrikeRank,"bonus",newSRbonus)]
[h: propStrikeRank = json.set(propStrikeRank,"malus",newSRmalus)]
[h: setProperty("StrikeRank",propStrikeRank,tokenId)]
[h: computeSR(tokenId)]

[h: "<!-- Refresh edit Window for the new token -->"]
[h: macroParam = json.set("{}", "tokenId", tokenId)]

[h, if(srcWindow == "openSheetMgt"), code:{
  [r, macro("openSheetMgt@Lib:RQII"): macroParam]
};{
  [h, macro("openHumCombatAttr@Lib:RQII"): macroParam]
}]